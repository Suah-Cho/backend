name: Build and Push Frontend Image to ACR

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Get next version
              uses: reecetech/version-increment@2024.4.3
              id: version
              with:
                scheme: semver
                increment: patch
  
            - name: Create a GitHub Release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.PAT }}
              with:
                tag_name: ${{ steps.version.outputs.version }}
                release_name: Release ${{ steps.version.outputs.version }}
                body: Automated release for version ${{ steps.version.outputs.version }}

            - name: Azure Login
              uses: Azure/login@v1
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}

            - name: checkout cicd
              uses: actions/checkout@v2
              with:
                repository: 'Suah-Cho/CICD-pipeline'
                ref: main
                token: ${{ secrets.PAT }}
                path: CICD-pipeline
              
            - name: make env file
              run: |
                cd CICD-pipeline/resources/scripts
                chmod +x make_env.bash
                ./make_env.bash dev
                pwd

            - name: Image build and testing
              id: testing
              run: |
                docker buildx build -t ${{ secrets.ACR_LOGIN_SERVER }}/test-backend:${{ steps.version.outputs.version }} .
                docker run -d -p 8080:8000 --name test ${{ secrets.ACR_LOGIN_SERVER}}/test-backend:${{ steps.version.outputs.version }} --env-file dev.env

                echo "Waiting for the container to start..."

                sleep 2
                docker ps
                
                echo "Testing /api/docs/endpoint..."
                status_code=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:8080/api/docs)
                echo "Received status code: $status_code"
                echo "::set-output name=status_code::$status_code"

            - name: ACR login
              if: steps.testing.outputs.status_code == 200
              uses: azure/docker-login@v2
              id: build
              with:
                login-server: ${{ secrets.ACR_LOGIN_SERVER }}
                username: ${{ secrets.ACR_USERNAME }}
                password: ${{ secrets.ACR_PASSWORD }}
            
            - name: push the image to acr
              if: steps.testing.outputs.status_code == 200
              run: |
                docker push ${{ secrets.ACR_LOGIN_SERVER }}/test-backend:${{ steps.version.outputs.version }}

            - name: Update docker-compose.yml
              run: |
                sed -i '/croft-api-server:/,/restart: always/{s|image: ${{ secrets.ACR_LOGIN_SERVER }}/gp-backend:.*|image: ${{ secrets.ACR_LOGIN_SERVER }}/test-backend:'"${{ steps.version.outputs.version }}"'|}' CICD-pipeline/resources/docker-compose.yml
                cat CICD-pipeline/resources/docker-compose.yml
      
      
            - name: Commit and Push to CICD-pipeline repository
              run: |
                cd CICD-pipeline
                git config user.email "sacho0929@gmail.com"
                git config user.name "Suah-Cho"
                git commit -am "Update backend image - test-backend:${{ steps.version.outputs.version }}"
                git push origin main
      


